$border-color: #ff004b;
$background-color: #140c0e;
$bg-gradient: #140c0e;

*, *::before, *::after {
  box-sizing: border-box;
}
@function round-to-pixel($value) {
  @return round($value * 1px);
}
@mixin rounded-height($height) {
  height: $height;
  height: round-to-pixel($height);
}
@mixin rounded-width($width) {
  width: $width;
  width: round-to-pixel($width);
}

body {
  margin: 0;
  padding: 0;
  overflow: hidden;
  background-color: $background-color;
  -webkit-font-smoothing: antialiased;
}

$gridSize: 75px;  // Size of the grid cell
$lineThickness: 5px;  // Thickness of the lines
$gridColor: #ff004b;  // Grid color

.grid-background {
  transform-style: preserve-3d;
  position: fixed;
  bottom: 0;
  left: -1px;  // Push it 1px to the left
  width: calc(100% + 1px);  // Extend the width by 1px
  height: 100%;
  background-color: $background-color;

  background-image: 
  linear-gradient(to right, $gridColor, $gridColor ($lineThickness + 1px), transparent ($lineThickness + 1px), transparent $gridSize),
  linear-gradient(to bottom, $gridColor, $gridColor ($lineThickness + 1px), transparent ($lineThickness + 1px), transparent $gridSize);


  background-size: $gridSize $gridSize;

  transform: perspective(900px) rotateX(70deg) scale(1.2);
  transform-origin: 50% 40%;

  &:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to top, transparent, $bg-gradient 50%);
    pointer-events: none;
  }
}

//use Commodore PET font, located in fonts/comm-pet.ttf
@font-face {
  font-family: "Commodore PET";
  src: url("../fonts/comm-pet.ttf");
  font-weight: normal;
}

.terminal {
  border: 4px solid $border-color;
  width: 50vw;
  height: 70vh;
  background-color: #1b1b1b;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  overflow: hidden;
  z-index: 1000;
  @media (orientation: portrait) {
    height: 70vh;
    width: 80vw;
  }
}

.title-bar {
  background-color: $border-color;
  color: #fff;
  padding: 5px;
  text-align: left; /* Align the title to the left */
  font-weight: bold;
  font-family: "Commodore PET", monospace, sans-serif;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 0px;

  .close-btn {
    cursor: pointer;
    float: right; /* Move the close button to the right */
  }

  &:before {
    content: "[root@localhost]#"; /* Title */
  }
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: repeating-linear-gradient(0deg, #080808, #080808 2px, transparent 2px, transparent 4px);
  background-blend-mode: overlay;
  opacity: 0.2;
  pointer-events: none;
}
.content {
  padding: 0;
  margin-top: 0px;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  position: relative;
  row-gap: 5vh;
  column-gap: 0vw;

}

.language-option {
  width: 12vw;
  margin: 0px;
  cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  font-family: "Commodore PET";
  /* Add the following to prevent text from breaking into multiple lines */
  white-space: nowrap;  
  text-overflow: ellipsis;

  img {
    width: 7vw;
    image-rendering: -moz-crisp-edges;         /* Firefox */
    image-rendering: -o-crisp-edges;           /* Opera */
    image-rendering: -webkit-optimize-contrast;/* Webkit (Safari now, Chrome & Opera older) */
    image-rendering: crisp-edges;
    -ms-interpolation-mode: nearest-neighbor;
    margin-bottom: -5px;
    @media (orientation: portrait) {
      width: 10vh;      
    }
  }

  span {
    display: block;
    color: #fff;
    font-weight: bold;
    margin-top: 20px;
    background-color: transparent;
    transition: background-color 0.3s ease-out; 
  }

  &:hover {
    span {
      background-color: #ff004b;
      transition: background-color 0.3s ease-in;
    }
  }
}
.terminal, .title-bar {
  box-sizing: border-box;
}

#static-effect {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none; /* So it doesn't interfere with other interactions */
  opacity: 0.1; /* You can adjust the opacity as needed */
}
$PgridSize: 50px;  // Size of the grid cell (mobile)
$PlineThickness: 4px;  // Thickness of the lines (mobile)
@media (orientation: portrait) {
  .terminal {
    width: 75%;
  }

  .content {
    flex-direction: column; // Stack items vertically
  }
  
  .language-option {
    margin-bottom: 20px; // Add some spacing between the options
  }
  .grid-background {
    background-image: 
      linear-gradient(to right, $gridColor, $gridColor $PlineThickness, transparent $PlineThickness, transparent $PgridSize),
      linear-gradient(to bottom, $gridColor, $gridColor $PlineThickness, transparent $PlineThickness, transparent $PgridSize);
    background-size: $PgridSize $PgridSize;
  }
}